{"version":3,"sources":["components/ItemsList/ItemsList.tsx","utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["ItemsList","items","map","title","id","getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","pages","isPreviousDisabled","isNextDisabled","className","classNames","disabled","href","onClick","page","active","App","useState","countPerPage","setCountPerPage","setCurrentPage","length","startingItem","endingItem","min","currentItems","slice","value","onChange","event","target","htmlFor","newPage","ReactDOM","render","document","getElementById"],"mappings":"kMAOaA,EAAuB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrC,OACE,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,oBAAI,UAAQ,OAAZ,SACGD,GADqBC,S,gBCXzB,SAASC,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,ECIF,IAAMG,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGW,GAEtBI,EAAqC,IAAhBN,EACrBO,EAAiBP,IAAgBE,EAcvC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAxBe,WAChBN,GACHL,EAAaD,EAAc,IAiBzB,oBAWDK,EAAMjB,KAAI,SAAAyB,GAAI,OACb,oBACEL,UAAWC,IACT,YACA,CAAEK,OAAQD,IAASb,IAHvB,SAOE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAME,GACVD,QAAS,kBAAMX,EAAaY,IAJ9B,SAMGA,KAREA,MAaT,oBAAIL,UAAWC,IACb,YACA,CAAEC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QArDW,WACZL,GACHN,EAAaD,EAAc,IA8CzB,wBCtEFb,EAAQI,EAAW,EAAG,IACzBH,KAAI,SAAAO,GAAC,MAAK,CACTN,MAAM,QAAD,OAAUM,GACfL,GAAIK,MAGKoB,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBmB,EAApB,KAEMrB,EAAQX,EAAMiC,OAEdC,GAAgBrB,EAAc,GAAKiB,EACnCK,EAAanB,KAAKoB,IAAIF,EAAeJ,EAAc9B,EAAMiC,QAEzDI,EAAerC,EAAMsC,MAAMJ,EAAcC,GAW/C,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCqB,EAAe,EADhD,cACuDC,EADvD,eACwExB,EADxE,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRlB,GAAG,kBACHkB,UAAU,eACVkB,MAAOT,EACPU,SAxBiB,SAACC,GAC1BV,GAAiBU,EAAMC,OAAOH,OAC9BP,EAAe,IAiBT,UAOE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASkB,EACTjB,YAAaA,EACbC,aArCe,SAAC8B,GACpBZ,EAAeY,MAuCb,cAAC,EAAD,CAAW5C,MAAOqC,QClExBQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7cee009f.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { Item } from '../../react-app-env';\n\ninterface Props {\n  items: Item[];\n}\n\nexport const ItemsList: FC<Props> = ({ items }) => {\n  return (\n    <ul>\n      {items.map(({ title, id }) => (\n        <li data-cy=\"item\" key={id}>\n          {title}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, lastPage);\n\n  const isPreviousDisabled = currentPage === 1;\n  const isNextDisabled = currentPage === lastPage;\n\n  const onPreviousPage = () => {\n    if (!isPreviousDisabled) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const onNextPage = () => {\n    if (!isNextDisabled) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: isPreviousDisabled },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isPreviousDisabled}\n          onClick={onPreviousPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: page === currentPage },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        { disabled: isNextDisabled },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isNextDisabled}\n          onClick={onNextPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { ItemsList } from './components/ItemsList';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => ({\n    title: `Item ${n}`,\n    id: n,\n  }));\n\nexport const App: React.FC = () => {\n  const [countPerPage, setCountPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const total = items.length;\n\n  const startingItem = (currentPage - 1) * countPerPage;\n  const endingItem = Math.min(startingItem + countPerPage, items.length);\n\n  const currentItems = items.slice(startingItem, endingItem);\n\n  const handleCountPerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    setCountPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startingItem + 1} - ${endingItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={countPerPage}\n            onChange={handleCountPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={countPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ItemsList items={currentItems} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}